steps:
  - id: 'Run tests for a11y scanning'
    name: 'gcr.io/cloud-builders/docker@sha256:8a9bff005803926fbc760f9528b708c259ac170b5e93082a9c2342a731945f66'
    dir: 'devsecops/axe-testing'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create the coverage directory on the host
        mkdir -p /workspace/coverage
        chmod -R 777 /workspace/coverage

        # mkdir -p ./coverage
        # chmod -R 777 ./coverage
        # docker run --rm --network host -v ./coverage:/app/coverage axe-e2e npm run test:all

        # Build the Docker image
        docker build -t axe-e2e .

        # Run tests in the Docker container with volume mounting
        docker run --rm --network host -v /workspace/coverage:/app/coverage axe-e2e npm run test:all

        # List the coverage directory to confirm files exist
        echo "Listing files in /workspace/coverage:"
        ls -la /workspace/coverage

        # Check for the presence of the coverage report
        if [ ! -f /workspace/coverage/coverage-summary.json ]; then
          echo "Error: coverage-summary.json not found in /workspace/coverage"
          exit 1
        fi

  - id: 'Upload test coverage report to bucket'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    dir: 'devsecops/axe-testing'
    entrypoint: bash
    args:
      - '-c'
      - |

        echo "files found"
        ls -la /workspace/coverage

        echo $pwd

        # Install jq and bc
        apt-get update && apt-get install -y jq bc

        # Generate a timestamp
        export timestamp=$(date +%s)

        # Get the last commit's coverage report from GCS
        echo "Getting last commit's test coverage report..."
        last_commit_on_this_branch=$(gsutil ls gs://safe-inputs-devsecops-outputs-for-dashboard/test-coverage/a11y/ | grep "$BRANCH_NAME" | sort | tail -n 1)

        # If this isn't the first commit on this branch, then determine test coverage trend 
        if [ "$last_commit_on_this_branch" ]; then
            
          # Download the last coverage report in order to be able to use jq
          gsutil cp "$last_commit_on_this_branch" last_commit_coverage.json

          # Extract current and last coverage percentages
          this_coverage=$(jq -r '.total.statements.pct' /workspace/coverage/coverage-summary.json)
          last_coverage=$(jq -r '.total.statements.pct' last_commit_coverage.json)

          # Compare coverage
          echo "Current coverage: $this_coverage%"
          echo "Last coverage: $last_coverage%"
          coverage_difference=$(echo "$this_coverage - $last_coverage" | bc)
          echo "Coverage difference: $coverage_difference%"

          echo "Apending report with the coverage difference..."
          jq ". + {\"difference_from_last_commit\": {\"statements_pct\": $coverage_difference}}" /workspace/coverage/coverage-summary.json > /workspace/coverage/updated-coverage-summary.json
          mv /workspace/coverage/updated-coverage-summary.json  /workspace/coverage/coverage-summary.json

        else
          echo "No previous coverage reports found on this branch."
          echo "Skipping coverage trend calculations."
        fi

        echo "formating file..."
        jq '.' /workspace/coverage/coverage-summary.json > /workspace/coverage/coverage-pretty.json

        echo "Copying coverage report to GCS bucket..."
        gsutil -m cp -r /workspace/coverage/coverage-pretty.json gs://safe-inputs-devsecops-outputs-for-dashboard/test-coverage/a11y/${BRANCH_NAME}__${timestamp}__${SHORT_SHA}.json
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
