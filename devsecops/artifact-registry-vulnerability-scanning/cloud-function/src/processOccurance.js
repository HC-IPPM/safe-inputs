// processOccurence could return{vulnId, resourceName, text}
// vulnId and resourceName as above, and text as the content to be written to the file (so JSON.stringify(occurrence))

// could maybe perform checks and throw an error if the provided occurrence has missing or invalid information,
// no point continuing or writing everything if the occurence is invalid

const { getValidAffectedPackages } = require('./getValidAffectedPackages.js');

const processOccurrence = async (occurrence) => {
  const vulnId = occurrence.noteName.split('/').pop();
  const resourceName = occurrence.resourceUri.split('/').pop();

  // Extract valid affected packages
  const validAffectedPackages = await getValidAffectedPackages(
    occurrence.vulnerability.packageIssue,
  );

  // check occurrence
  if (!vulnId || !resourceName || !validAffectedPackages.length) {
    throw new Error('Invalid occurrence: missing required fields');
    // console.log("Missing fields in occurance for VUNERABILITY")
  }
  const text = JSON.stringify(occurrence);
  return { vulnId, resourceName, text, validAffectedPackages };
};

module.exports = { processOccurrence };
