const { getAffectedPackages } = require('./getAffectedPackages.js');

const processOccurrence = async (occurrence) => {
  const vulnId = occurrence.noteName.split('/').pop();

  // Extract SHA and image to form resourceName (image@sha256:shortSHA)
  const sha256Match = occurrence.resourceUri.match(/sha256:([a-fA-F0-9]{64})/);
  const shortSha = sha256Match ? sha256Match[1].slice(0, 12) : null;
  if (!shortSha) {
    throw new Error(
      'Invalid occurrence: missing or malformed SHA256 in resourceUri',
    );
  }

  const fullResourceName = occurrence.resourceUri.split('/').pop(); // image@sha256:fullSHA
  const imageName = fullResourceName.split('@')[0];
  const resourceName = `${imageName}@sha256:${shortSha}`;

  // Extract affected packages
  const affectedPackages = await getAffectedPackages(
    occurrence.vulnerability.packageIssue,
  );

  // Check occurrence before continuing (may have empty affectedPackages if had issues in getAffectedPackages)
  if (!vulnId || !resourceName || !affectedPackages.length) {
    throw new Error(
      `Invalid occurrence: missing required fields: ${occurrence}`,
    );
  }
  const text = JSON.stringify(occurrence);
  return { vulnId, resourceName, affectedPackages, text }; // { CVE.., image@sha256:shortSHA, [{package, version}], stringified(occurrence) }
};

module.exports = { processOccurrence };
