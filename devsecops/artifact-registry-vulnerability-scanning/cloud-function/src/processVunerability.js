const processVulnerability = async (occurrence, bucketName) => {
  const vulnId = occurrence.noteName.split('/').pop();
  const resourceName = occurrence.resourceUri.split('/').pop();

  for (const issue of occurrence.vulnerability.packageIssue) {
    try {
      const affectedPackage = issue.affectedPackage;
      const affectedVersion = issue.affectedVersion.name;
      const occurenceFilename = `vulnerabilities/${vulnId}-${affectedPackage}-${affectedVersion}-${resourceName}`;
      const vulnOccurrence = occurrence
      return { bucketName, vulnOccurrence, occurenceFilename }
      // await writeVulnToBucket(
      //   bucketName,
      //   JSON.stringify(occurrence),
      //   occuranceFilename,
      // );
    } catch (issueError) {
      console.error(`Error processing issue ${issue}:`, issueError);
    }
  }
};

module.exports = { processVulnerability };
