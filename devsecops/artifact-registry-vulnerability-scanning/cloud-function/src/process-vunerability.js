const { writeVulnToBucket } = require('./save-to-bucket.js');

const processVulnerability = async (occurrence, bucketName) => {
  // Extracts vunerablity id, package, version and image - uses as filename
  if (
    !occurrence.vulnerability ||
    !occurrence.vulnerability.packageIssue ||
    occurrence.vulnerability.packageIssue.length === 0
  ) {
    console.log('No package issues found.');
    return;
  }

  const vulnId = occurrence.noteName.split('/').pop();
  const resourceName = occurrence.resourceUri.split('/').pop();

  for (const issue of occurrence.vulnerability.packageIssue) {
    try {
      const affectedPackage = issue.affectedPackage;
      const affectedVersion = issue.affectedVersion.name;
      const occuranceFilename = `${vulnId}-${affectedPackage}-${affectedVersion}-${resourceName}`;

      await writeVulnToBucket(
        bucketName,
        JSON.stringify(occurrence),
        occuranceFilename,
      );
    } catch (issueError) {
      console.error(`Error processing issue ${issue}:`, issueError);
    }
  }
};

module.exports = { processVulnerability };
