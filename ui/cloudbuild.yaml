steps:
  - id: install
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    dir: ui
    entrypoint: npm
    args: ['ci', '--no-optional']

  - id: 'Check types'
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    dir: ui
    entrypoint: npm
    args: ['run', 'typecheck']

  - id: test
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    dir: ui
    entrypoint: npm
    args: ['test']

  - id: docker-compose-up-dev-environment-for-axe-testing
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker compose -f ./docker-compose.dev.yaml down -v && \
        docker compose -f ./docker-compose.dev.yaml up -d && \
        sleep 50

  - id: build-axe-container
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'axe', './axe-testing']

  - id: prepare-results-directory # was having permission issues: Error: EACCES: permission denied, open './axe-results/*.json'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p /workspace/axe-results && \
        chmod -R 777 /workspace/axe-results

  - id: run-axe-scan
    name: 'gcr.io/cloud-builders/docker'
    args: [
        'run',
        '--network',
        'host', # to access the dev environment
        '--rm',
        '--volume',
        '/workspace/axe-results:/app/axe-results',
        'axe',
      ]

  # - id: upload-axe-results-gcs
  #   name: 'gcr.io/cloud-builders/gsutil'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       gsutil cp /workspace/axe-results/ci_axe_results_*.json \
  #       gs://safe-inputs-axe-ci-results/

  - id: docker-compose-down-dev-environment
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker compose -f ./docker-compose.dev.yaml down -v

  - id: generate-image-name
    name: 'gcr.io/cloud-builders/docker@sha256:0e3fa78f64d862380096fc1129fc42211965458fe6aaad57cef39494e4fb9ece'
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/phx-01j1tbke0ax-safeinputs/ui:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - id: build-if-main
    name: 'gcr.io/cloud-builders/docker@sha256:0e3fa78f64d862380096fc1129fc42211965458fe6aaad57cef39494e4fb9ece'
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
        else
          exit 0
        fi

  - id: push-if-main
    name: 'gcr.io/cloud-builders/docker@sha256:0e3fa78f64d862380096fc1129fc42211965458fe6aaad57cef39494e4fb9ece'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
