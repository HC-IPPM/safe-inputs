steps:
  - id: 'Install dependencies'
    name: 'node:22-alpine3.21@sha256:f2dc6eea95f787e25f173ba9904c9d0647ab2506178c7b5b7c5a3d02bc4af145'
    dir: ui
    entrypoint: npm
    args: ['ci', '--no-optional']

  - id: 'Check types'
    name: 'node:22-alpine3.21@sha256:f2dc6eea95f787e25f173ba9904c9d0647ab2506178c7b5b7c5a3d02bc4af145'
    dir: ui
    entrypoint: npm
    args: ['run', 'typecheck']

  - id: Test
    name: 'node:22-alpine3.21@sha256:f2dc6eea95f787e25f173ba9904c9d0647ab2506178c7b5b7c5a3d02bc4af145'
    dir: ui
    entrypoint: npm
    args: ['test']

  - id: 'Upload test coverage report to bucket'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest@sha256:3a24ff5f089d9ce3627306873ef1e1061488a63ae12c0bd0b5c24ec5ee594798'
    dir: ui
    entrypoint: bash
    args:
      - '-c'
      - |
        # Copy upload script
        cp ../devsecops/code-coverage-reporting/upload-coverage-to-gcs.sh upload-coverage-to-gcs.sh

        # Upload upload coverage to GCS
        ./upload-coverage-to-gcs.sh \
          --cloudbuild-dir ui \
          --coverage-dir ./coverage \
          --branch-name $BRANCH_NAME \
          --short-sha $SHORT_SHA

  - id: 'Axe a11y testing setup'
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    dir: ./
    script: |
      #!/bin/bash
      set -o errexit
      set -o pipefail
      set -o nounset

      # docker compose dev environment, detached mode, with ui-gql-codegen disabled because it a) doesn't need to run here, and
      # b) has permissions issues when running in this context
      docker compose -f ./docker-compose.dev.yaml up -d --scale ui-gql-codegen=0

      docker build -t axe ./devsecops/axe-testing

      # fix for a permission issues when running the axe tests, need to be able to write to ./axe-results/*.json
      mkdir -p /workspace/axe-results
      chmod -R 777 /workspace/axe-results

      # ensure env_variable when running locally 
      if [[ -z "${COMMIT_SHA:-}" ]]; then
          export COMMIT_SHA="unknown_sha"
      fi

      # make sure the ui server is ready before continuing
      docker run \
        --volume "${PWD}":/home/project \
        --workdir /home/project \
        --network host \
        --entrypoint node \
        node:22-alpine3.21@sha256:6e80991f69cc7722c561e5d14d5e72ab47c0d6b6cfb3ae50fb9cf9a7b30fdf97 \
        ./wait_for_service.cjs http://localhost:8080/signin

  - id: 'Axe a11y testing'
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    args: [
        'run',
        '--network',
        'host', # to access the dev environment
        '--rm',
        '--volume',
        '/workspace/axe-results:/app/axe-results',
        '--env',
        'COMMIT_SHA=${COMMIT_SHA:-unknown_sha}',
        'axe',
      ]

  - id: upload-axe-results-gcs
    name: 'gcr.io/cloud-builders/gsutil@sha256:386bf19745cfa9976fc9e7f979857090be9152b30bf3f50527c6ace1de9d2673'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil cp /workspace/axe-results/ci_axe_results_*.json \
        gs://safe-inputs-devsecops-outputs-for-dashboard/axe-ci-results/$BRANCH_NAME-$COMMIT_SHA.json

  - id: docker-compose-down-dev-environment
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker compose -f ./docker-compose.dev.yaml down -v

  - id: generate-image-name
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/phx-01j1tbke0ax-safeinputs/ui:$BRANCH_NAME-$COMMIT_SHA-$(date +%s)" > /workspace/imagename

  - id: build-if-main
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
        else
          exit 0
        fi

  - id: push-if-main
    name: 'gcr.io/cloud-builders/docker@sha256:b991d50960b337f581ad77ea2a59259a786d177019aa64d8b3acb01f65dbc154'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
