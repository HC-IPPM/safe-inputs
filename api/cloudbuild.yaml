steps:
  # - id: 'Check types'
  #   name: 'node:lts-alpine3.19@sha256:97f02cbb1c8ef6eefcfb1b1f958c012362758972cf125a99c09bd18b26a716c9'
  #   entrypoint: 'sh'
  #   dir: api
  #   args:
  #     - '-c'
  #     - |
  #       npm ci && npm run typecheck

  # - id: 'Run tests'
  #   name: 'gcr.io/cloud-builders/docker@sha256:b98c8f37c8801d00db61f4388e1e7c801efe6eb76bebe5f0023312924f933379'
  #   script: |
  #     #!/usr/bin/env bash
  #     set -o errexit
  #     set -o pipefail
  #     set -o nounset
  #     DOCKER_NETWORK=cloudbuild DOCKER_TTY=false docker compose -f api/docker-compose.dev-test.yaml up --exit-code-from api-test

  - id: 'Build, Tag, Push and Sign Image if Test Branch'
    name: 'gcr.io/cloud-builders/docker@sha256:b98c8f37c8801d00db61f4388e1e7c801efe6eb76bebe5f0023312924f933379'
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        if [[ "${BRANCH_NAME}" == "test-cloudbuild-changes" ]]; then
          # Generate image name with evaluated date
          timestamp=$(date +%s)
          image="northamerica-northeast1-docker.pkg.dev/pdcp-cloud-005-safeinputs/safeinputs/api:${BRANCH_NAME}-${SHORT_SHA}-$timestamp"
          echo $image > /workspace/imagename

          # Build and tag the image
          docker build -t $image -f ./Dockerfile.prod .
          docker push $image  # Ensure this uses the exact image name without a wildcard

          # Generate token and sign the image
          token=$(gcloud auth print-identity-token --audiences=sigstore)
          docker run \
            --network=cloudbuild \
            --mount source=home-volume,target=/builder/home \
            --rm \
            -e SIGSTORE_NO_CACHE=true \
            -e HOME=/builder/home \
            gcr.io/projectsigstore/cosign \
            sign --identity-token=$token $image -y
        fi

artifacts:
  images:
    - 'northamerica-northeast1-docker.pkg.dev/pdcp-cloud-005-safeinputs/safeinputs/api:${BRANCH_NAME}-${SHORT_SHA}-*'

options:
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

serviceAccount: 'projects/pdcp-cloud-005-safeinputs/serviceAccounts/cloud-build-sa@pdcp-cloud-005-safeinputs.iam.gserviceaccount.com'
