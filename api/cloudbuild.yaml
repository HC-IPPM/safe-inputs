steps:
  - id: install
    name: 'node:lts-alpine3.19@sha256:40dc4b415c17b85bea9be05314b4a753f45a4e1716bb31c01182e6c53d51a654'
    dir: api
    entrypoint: npm
    args: ['ci', '--no-optional']

  - id: 'Check types'
    name: 'node:lts-alpine3.19@sha256:40dc4b415c17b85bea9be05314b4a753f45a4e1716bb31c01182e6c53d51a654'
    dir: api
    entrypoint: npm
    args: ['run', 'typecheck']

  - id: 'Run tests'
    name: 'gcr.io/cloud-builders/docker@sha256:4a320eb06b1a8f3abe1243b0aad20ad9d8455f1dbfc032a3d941340622494005'
    script: |
      #!/usr/bin/env bash
      set -o errexit
      set -o pipefail
      set -o nounset

      # Create the coverage directory 
      mkdir -p /workspace/coverage
      chmod -R 777 /workspace/coverage

      # disable TTY output for the compose environment, the ansi characters printed when a TTY is attached
      # are just junk characters to the GCP cloudbuild logs
      DOCKER_NETWORK=cloudbuild DOCKER_TTY=false docker compose -f api/docker-compose.dev-test.yaml up --exit-code-from api-test

      # List the coverage directory contents to confirm files exist
      echo "Listing files in /workspace/coverage:"
      ls -la /workspace/coverage

  - id: 'Upload test coverage report to bucket'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest@sha256:e0246385c6f43e997bb49541de7c684846ee9c2baa738a68613f14cab987feb8'
    dir: api
    entrypoint: bash
    args:
      - '-c'
      - |
        # Copy upload script
        cp ../devsecops/code-coverage-reporting/upload-coverage-to-gcs.sh upload-coverage-to-gcs.sh

        # Upload coverage to GCS
        ./upload-coverage-to-gcs.sh \
          --cloudbuild-dir api \
          --coverage-dir /workspace/coverage \
          --branch-name $BRANCH_NAME \
          --short-sha $SHORT_SHA

  - id: generate-image-name
    name: 'gcr.io/cloud-builders/docker@sha256:4a320eb06b1a8f3abe1243b0aad20ad9d8455f1dbfc032a3d941340622494005'
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/phx-01j1tbke0ax-safeinputs/api:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker@sha256:4a320eb06b1a8f3abe1243b0aad20ad9d8455f1dbfc032a3d941340622494005'
    id: build-if-main
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
        else
          exit 0
        fi

  - id: push-if-main
    name: 'gcr.io/cloud-builders/docker@sha256:4a320eb06b1a8f3abe1243b0aad20ad9d8455f1dbfc032a3d941340622494005'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
