steps:
  - id: 'Check types'
    name: 'node:lts-alpine3.19@sha256:97f02cbb1c8ef6eefcfb1b1f958c012362758972cf125a99c09bd18b26a716c9'
    entrypoint: 'sh'
    dir: api
    args:
      - '-c'
      - |
        npm ci && npm run typecheck

  - id: 'Run tests'
    name: 'gcr.io/cloud-builders/docker@sha256:b98c8f37c8801d00db61f4388e1e7c801efe6eb76bebe5f0023312924f933379'
    script: |
      #!/usr/bin/env bash
      set -o errexit
      set -o pipefail
      set -o nounset
      DOCKER_NETWORK=cloudbuild DOCKER_TTY=false docker compose -f api/docker-compose.dev-test.yaml up --exit-code-from api-test

  - id: 'Generate image name'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/safeinputs/api:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - id: 'Build, tag, and push image if test branch'
    name: 'gcr.io/cloud-builders/docker@sha256:b98c8f37c8801d00db61f4388e1e7c801efe6eb76bebe5f0023312924f933379'
    entrypoint: 'bash'
    dir: api
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "test-cloudbuild-changes" ]]; then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
          docker push $image
          docker inspect $image --format "$image@{{.Id}}" > /workspace/image_with_digest
        fi

  - id: 'Generate token'
    name: 'gcr.io/cloud-builders/gcloud'
    script: |
      #!/bin/sh
      set -e
      gcloud auth print-identity-token --audiences=sigstore > /workspace/token

  - id: 'Sign image'
    name: 'gcr.io/cloud-builders/docker'
    script: |
      #!/bin/sh
      set -e
      docker run \
        --network=cloudbuild \
        --mount source=home-volume,target=/builder/home \
        --rm \
        -e SIGSTORE_NO_CACHE=true \
        -e HOME=/builder/home \
        gcr.io/projectsigstore/cosign \
        sign --identity-token=$(cat /workspace/token) $(cat /workspace/image_with_digest) -y

artifacts:
  images:
    - $(cat /workspace/imagename)

options:
  env:
    - 'IMAGE_NAME=$(cat /workspace/imagename)'
  dynamic_substitutions: true
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
serviceAccount: cloud-build-sa@pdcp-cloud-005-safeinputs.iam.gserviceaccount.com
