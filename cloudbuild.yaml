steps:
  - id: 'Install dependencies'
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    entrypoint: 'npm'
    dir: ./
    args: ['run', 'ci:all'] # script in the root package.json which runs ci at the root and in each sub-project

  - id: 'Prettier check'
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    entrypoint: 'npm'
    dir: ./
    args: ['run', 'prettier']

  - id: 'Eslint check'
    name: 'node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6'
    entrypoint: 'npm'
    dir: ./
    args: ['run', 'eslint:ci'] # currently allowing warnings, but could be tightened up post https://github.com/PHACDataHub/safe-inputs/issues/144

  - id: 'GraphQL Codegen check'
    name: 'gcr.io/cloud-builders/docker@sha256:09a1e5da9e9c6adaaaef919eab4c84f6e2a16d401261853843ea26141e7a88de'
    dir: ./
    script: |
      #!/bin/bash
      set -o errexit
      set -o pipefail
      set -o nounset

      # docker compose dev environment, detached mode, with the unnecessary services disabled (would disable the ui service too, but the gateway service needs it)
      docker compose -f ./docker-compose.dev.yaml up --detach --scale seed-dev-data=0 --scale ui-gql-codegen=0

      # running the codegen check from a separate container, outside of the docker compose environment, because when I was using the codegen
      # check inside the compose environment (with the --exit-code-from flag set), cloud build was consistently getting 137 exit codes
      # regardless of the outcome of the checks. See: https://github.com/HC-IPPM/safe-inputs/pull/724/commits/36abe66a15020daf70f3ed3e4d3dbd5b3b96fd0b
      docker run \
        --volume "${PWD}":/home/project \
        --workdir /home/project \
        --network host \
        --entrypoint npm \
        node:lts-alpine3.19@sha256:2d8c24d9104bda27e07dced6d7110aa728dd917dde8255d8af3678e532b339d6 \
        run gql-codegen:check

      docker compose -f ./docker-compose.dev.yaml down

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
